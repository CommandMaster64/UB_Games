var Games = [
    'Snake game',
    '<body onkeydown="move(event)" style="background-color: black;">    <p id="score" style="color: white; user-select: none;">Score: 0</p>    <canvas id="game" width="500" height="500" style = "border: 1px solid white; background-color: black;"></canvas></body>',
    'var canvas = document.getElementById("game");var ctx = canvas.getContext("2d");var score = 0;var death = false;var start = false;var snake = [    0,    0,    0,    0,    0,    0];var apple = {    X: Math.floor(Math.random() * 25)*20,    Y: Math.floor(Math.random() * 25)*20};var moveb = 0;function move(event) {    if (event.key == "ArrowRight" && moveb != 2) {        moveb = 1;        setTimeout(function () { start = true; }, 1000);    }    if (event.key == "ArrowLeft" && moveb != 1) {        moveb = 2;        setTimeout(function () { start = true; }, 1000);    }    if (event.key == "ArrowUp" && moveb != 4) {        moveb = 3;        setTimeout(function () { start = true; }, 1000);    }    if (event.key == "ArrowDown" && moveb != 3) {        moveb = 4;        setTimeout(function () { start = true; }, 1000);    }}setInterval(function () { checkDeath(); },1);function checkDeath() {    for (let i = 2; i < snake.length-2; i+=2) {        if (collision(snake[0], snake[1], 20, 20, snake[i], snake[i+1], 20, 20) && start) {            death = true;        }    }    if (snake[0] < 0 || snake[0] > 500 || snake[1] < 0 || snake[1] > 500) {        death = true;    }}setInterval(function () { if (!death) { loop(); } },150);function loop() {    if (!death && moveb == 1) {        let lastx = snake[0];        let lasty = snake[1];        snake[0]+=20;        snake[1]+=0;        for (let i = 2; i < snake.length; i+=2) {            let lstx = snake[i];            let lsty = snake[i+1];            snake[i] = lastx;            snake[i+1] = lasty;            lastx = lstx;            lasty = lsty;        }    }    if (!death && moveb == 2) {        let lastx = snake[0];        let lasty = snake[1];        snake[0]-=20;        snake[1]+=0;        for (let i = 2; i < snake.length; i+=2) {            let lstx = snake[i];            let lsty = snake[i+1];            snake[i] = lastx;            snake[i+1] = lasty;            lastx = lstx;            lasty = lsty;        }    }    if (!death && moveb == 3) {        let lastx = snake[0];        let lasty = snake[1];        snake[0]+=0;        snake[1]-=20;        for (let i = 2; i < snake.length; i+=2) {            let lstx = snake[i];            let lsty = snake[i+1];            snake[i] = lastx;            snake[i+1] = lasty;            lastx = lstx;            lasty = lsty;        }    }    if (!death && moveb == 4) {        let lastx = snake[0];        let lasty = snake[1];        snake[0]+=0;        snake[1]+=20;        for (let i = 2; i < snake.length; i+=2) {            let lstx = snake[i];            let lsty = snake[i+1];            snake[i] = lastx;            snake[i+1] = lasty;            lastx = lstx;            lasty = lsty;        }    }    if (collision(snake[1], snake[0], 20, 20, apple.X, apple.Y, 20, 20)) {        apple.X = Math.floor(Math.random() * 25)*20;        apple.Y = Math.floor(Math.random() * 25)*20;        snake[snake.length] = 0;        snake[snake.length] = 0;        score++;        document.getElementById("score").innerHTML = "Score: " + score;    }    ctx.clearRect(0, 0, 500, 500);    ctx.fillStyle = "green";    for (let i = 0; i < snake.length; i+=2) {         ctx.fillRect(snake[i], snake[i+1], 20, 20);    }    ctx.fillStyle = "red";    ctx.fillRect(apple.Y, apple.X, 20, 20);}function collision(x1, y1, w1, h1, x2, y2, w2, h2) {	if (Math.abs(x1-x2)<(w1+w2)/2) {    	if (Math.abs(y1-y2)<(h1+h2)/2) {        	return(true);        }    }    return(false);}function resetSnake() {    snake = [        0,        0,        0,        0,        0,        0    ];    score = 0;    moveb = 0;    start = false;    death = false;    apple.X = Math.floor(Math.random() * 25)*20;    apple.Y = Math.floor(Math.random() * 25)*20;    document.getElementById("score").innerHTML = "Score: 0";} document.addEventListener(\'keydown\', (event) => { move(event); })',
    'Minesweeper game',
    '<canvas id="canvas" style="border: 1px solid black;" width="500px" height="500px"></canvas><h1 id="flags">Flags: 10</h1>',
    'var flags = 10;var done = false;var board = [	0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0];var boardReveal = [	0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0];setup();function setup() {	for (let i = 0; i < 10; i++) {    	let e = Math.floor(Math.random() * board.length);        for (let i = 0; i < board.length; i++) {        	if (board[e] == 1) {            	e = Math.floor(Math.random() * board.length);            }        }        board[e] = 1;    }}var canvas = document.getElementById("canvas");var ctx = canvas.getContext(\'2d\');function drawGrid(bWidth, bHeight, sWidth, sHeight) {	for (let x = 0; x < sWidth/bWidth; x++) {    	for (let y = 0; y < sHeight/bHeight; y++) {        	ctx.strokeRect(x*bWidth, y*bHeight, bWidth, bHeight);        }    }}canvas.addEventListener(\'click\', (event) => { if (!done) {	for (let x = 0; x < 500/72; x++) {    	for (let y = 0; y < 500/72; y++) {        	if (event.clientX > x*72 && event.clientY > y*72) {            	if (event.clientX < (x*72)+72 && event.clientY < (y*72)+72) {                	if (boardReveal[x+(y*7)] == 0) {                        if (board[x+(y*7)] != 1){                            boardReveal[x+(y*7)] = 1;                             if (findBombsNear(x, y) == "") {                               	startReveal(x, y);                            }                            draw();                        }else {                             loose();                            done = true;                        }                     }                }            }        }    }}});function startReveal(x, y) {	let startboard = [        0, 0, 0, 0, 0, 0, 0,        0, 0, 0, 0, 0, 0, 0,        0, 0, 0, 0, 0, 0, 0,        0, 0, 0, 0, 0, 0, 0,        0, 0, 0, 0, 0, 0, 0,        0, 0, 0, 0, 0, 0, 0,        0, 0, 0, 0, 0, 0, 0    ];    startboard[x+(y*7)] = 1;    for (let n = 0; n < 2; n++) {        for (let i = 0; i < 500/72; i++) {            for (let c = 0; c < 500/72; c++) {                if (startboard[i+(c*7)] == 1) {                    if (findBombsNear(i, c) == "") {                        if (i != 6) {                            boardReveal[(i+1)+(c*7)] = 1;                            startboard[(i+1)+(c*7)] = 1;                        }                        if (i != 0) {                            boardReveal[(i-1)+(c*7)] = 1;                            startboard[(i-1)+(c*7)] = 1;                        }                        if (c != 0) {                            boardReveal[i+((c*7)-7)] = 1;                            startboard[i+((c*7)-7)] = 1;                        }                         if (c != 6) {                            boardReveal[i+((c*7)+7)] = 1;                            startboard[i+((c*7)+7)] = 1;                        }                    }                }            }        }    }}draw();function draw() {	ctx.fillStyle="grey";	ctx.fillRect(0, 0, 500, 500);	drawGrid(72, 72, 500, 500);    for (let x = 0; x < 500/72; x++) {    	for (let y = 0; y < 500/72; y++) {        	if (boardReveal[x+(y*7)] == 1) {            	ctx.fillStyle="black";            	ctx.font = "36px Arial";                 if (findBombsNear(x, y) != "") {                	ctx.fillText(findBombsNear(x, y), (x*72)+30, (y*72)+45);                }else {                	ctx.fillStyle = "darkgrey";                	ctx.fillRect((x*72)+1, (y*72)+1, 71, 71);                }            }else {            	if (boardReveal[x+(y*7)] == 2) {                	ctx.font = "36px Arial";                 	ctx.fillStyle = "black";                	ctx.fillText("F", (x*72)+30, (y*72)+45);                }            }        }    }}function findBombsNear(x, y) {     let thing = 0;     if (board[(x+(y*7))-8] == 1 && x != 0) {     	thing++;     }     if (board[(x+(y*7))-7] == 1) {     	thing++;     }     if (board[(x+(y*7))-6] == 1  && x != 6) {     	thing++;     }     if (board[(x+(y*7))-1] == 1 && x != 0) {     	thing++;     }     if (board[(x+(y*7))+1] == 1  && x != 6) {     	thing++;     }     if (board[(x+(y*7))+6] == 1 && x != 0) {     	thing++;     }     if (board[(x+(y*7))+7] == 1) {     	thing++;     }     if (board[(x+(y*7))+8] == 1  && x != 6) {    	thing++;     }     if (thing > 0) {     	return thing;     }else {     	return "";     } } function loose() {	for (let x = 0; x < 500/72; x++) {    	for (let y = 0; y < 500/72; y++) {        	if (board[x+(y*7)] == 1 && boardReveal[x+(y*7)] != 2) {            	ctx.fillStyle = "red";            	ctx.fillRect(x*72, y*72, 72, 72);            }        }    }}canvas.addEventListener("contextmenu", (event) => { if (!done) {	event.preventDefault();    for (let x = 0; x < 500/72; x++) {    	for (let y = 0; y < 500/72; y++) {        	if (event.clientX > x*72 && event.clientY > y*72) {            	if (event.clientX < (x*72)+72 && event.clientY < (y*72)+72) {                	if (boardReveal[x+(y*7)] == 0) {                    	flags--;                        document.getElementById("flags").innerHTML = "Flags: " + flags;						boardReveal[x+(y*7)] = 2;                     	draw();                    }else {                    	if (boardReveal[x+(y*7)] == 2) {                        	flags++;                            document.getElementById("flags").innerHTML = "Flags: " + flags;                        	boardReveal[x+(y*7)] = 0;                            draw();                        }                    }                }            }        }    }}});setInterval(checkWin, 1);function checkWin() {	let isFlagged = 0;	for (let x = 0; x < 500/72; x++) {    	for (let y = 0; y < 500/72; y++) {        	if (board[x+(y*7)] == 1 && boardReveal[x+(y*7)] == 2) {            	isFlagged++;            }        }    }    let allChecked = 0;    for (let i = 0; i < board.length; i++) {    	if (boardReveal[i] != 0) {        	allChecked++;        }    }    if (allChecked == board.length && isFlagged == 10) {    	document.getElementById("flags").innerHTML = "You win!";    }}'
];
function PullGame(Name, isScript) {
    for (let i = 0; i < Games.length; i += 2) {
        if (Games[i] == Name && !isScript) {
            return Games[i+1];
        }else {
	    if (Games[i] == Name && isScript) {
		return Games[i+2];
	    }
	}
    }
    return false;
}
/*
<textarea id="c"></textarea>
<button onclick="document.getElementById('c').value = compileGame(document.getElementById('c').value);">Compile</button>
<script>
function spli(oneBef, str, rep) {
	let ss = str;
    let og = str[oneBef];
	ss = ss.replace("'", "█");
    let f = ss.split("█")[0];
    let e = og + "" + ss.split("█")[1];
    return f + "" + rep + "" + e;
}
function compileGame(Game) {
  Game = Game.replaceAll("\n","");
  let e = Game;
  let g = 0;
  for (let i = 0; i < Game.length; i++) {
    if (Game[i] == "'") {
      e = spli(i+g, e, "\\");
      e = e.replace("'", "▙");
      g++;
    }
  }
  e = e.replaceAll("▙", "'");
  return e;
}
</script>
*/
